ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=12, angle=90, hjust=0, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(panel.background = element_blank(),
axis.text.x = element_text(size=12, angle=90, hjust=0, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=12, angle=270, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=10, angle=270, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 1, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = -1, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=90, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "red",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "pink",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "blue", high = "#572649",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(low = "#FFDAA6", high = "#003F7E",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(high = "#FFDAA6",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black"))
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(high = "#FFDAA6",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black")) +
geom_title("Correlation Heatmap")
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Income, Approved) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(x=Var1, y=Var2, fill=value)) +
geom_tile(size = 2) +
geom_text(aes(Var2, Var1, label = value), size = 3) +
scale_fill_gradient2(high = "#FFDAA6",
limit = c(-1,1), name="Correlation") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(size=8, angle=270, hjust = 0, colour="black"),
axis.text.y = element_text(size=8, colour="black")) +
ggtitle("Correlation Heatmap")
data <- data %>%
mutate(Industry = factor(Industry), Ethnicity = factor(Ethnicity), Citizen = factor(Citizen))
hist(data$Industry)
hist(as.numeric(data$Industry)))
hist(as.numeric(data$Industry))
data <- read.csv(filename)
data <- data %>%
mutate(Industry = as.numeric(factor(Industry)),
Ethnicity = as.numeric(factor(Ethnicity)),
Citizen = as.numeric(factor(Citizen)))
data <- read.csv(filename)
data <- data %>%
mutate(Industry = factor(Industry),
Ethnicity = as.numeric(factor(Ethnicity)),
Citizen = as.numeric(factor(Citizen)))
?levels
levels(data$Income)
levels(data$Industry)
data.frame(1:14, levels(data$Industry))
data <- read.csv(filename)
data <- data %>%
mutate(Industry = factor(Industry),
Ethnicity = factor(Ethnicity),
Citizen = factor(Citizen))
c(levels(data$Ethnicity), None)
c(levels(data$Ethnicity), NA)
c(levels(data$Ethnicity), NA * 8)
c(levels(data$Ethnicity), replicate(NA, 8))
c(levels(data$Ethnicity), replicate(8, NA))
dataFactorLevels <- data.frame(1:14, levels(data$Industry),
c(levels(data$Ethnicity), replicate(8, NA)),
c(levels(data$Citizen), replicate(11, NA)),)
?data.frame()
dataFactorLevels <- data.frame(levels(data$Industry),
c(levels(data$Ethnicity), replicate(8, NA)),
c(levels(data$Citizen), replicate(11, NA)),)
dataFactorLevels <- as.data.frame(levels(data$Industry),
c(levels(data$Ethnicity), replicate(8, NA)),
c(levels(data$Citizen), replicate(11, NA)),)
dataFactorLevels <- as.data.frame(Industry = levels(data$Industry),
Ethnicity = c(levels(data$Ethnicity), replicate(8, NA)),
Citizen = c(levels(data$Citizen), replicate(11, NA)),)
dataFactorLevels <- data.frame(Industry = levels(data$Industry),
Ethnicity = c(levels(data$Ethnicity), replicate(8, NA)),
Citizen = c(levels(data$Citizen), replicate(11, NA)),)
dataFactorLevels <- data.frame(Industry = levels(data$Industry))
dataFactorLevels <- data.frame(Ethnicity = c(levels(data$Ethnicity), replicate(8, NA)))
dataFactorLevels <- data.frame(Ethnicity = c(levels(data$Ethnicity), replicate(8, NA)),
Industry = levels(data$Industry))
dataFactorLevels <- data.frame(Ethnicity = c(levels(data$Ethnicity), replicate(9, NA)),
Industry = levels(data$Industry))
dataFactorLevels <- data.frame(Industry = levels(data$Industry),
Ethnicity = c(levels(data$Ethnicity), replicate(9, NA)),
Citizen = c(levels(data$Citizen), replicate(11, NA)),)
dataFactorLevels <- data.frame(Ethnicity = c(levels(data$Ethnicity), replicate(9, NA)),
Citizen = c(levels(data$Citizen), replicate(11, NA)),)
dataFactorLevels <- data.frame(Ethnicity = c(levels(data$Ethnicity), replicate(9, NA)))
dataFactorLevels <- data.frame(Ethnicity = c(levels(data$Ethnicity), replicate(9, NA)),)
dataFactorLevels <- data.frame(Industry = levels(data$Industry),
Ethnicity = c(levels(data$Ethnicity), replicate(9, NA)),
Citizen = c(levels(data$Citizen), replicate(11, NA)))
dataFactorLevels
as.integer(data$Industry)
data <- data %>%
mutate(Industry = as.integer(Industry),
Ethnicity = as.integer(Ethnicity),
Citizen = as.integer(Citizen))
library(readr)
library(kaggler)
library(tidyverse)
library(caret)
library(rpart)
library(Hmisc)
library(reshape2)
process <- preProcess(data, method = c('range'))
data <- predict(process, data)
data <- read.csv(filename)
# Data preparation
# Trying to label-encode all of the data points
data <- data %>%
mutate(Industry = factor(Industry),
Ethnicity = factor(Ethnicity),
Citizen = factor(Citizen))
# Saving all the factor levels to a data frame.
dataFactorLevels <- data.frame(levels(data$Industry),
c(levels(data$Ethnicity), replicate(8, NA)),
c(levels(data$Citizen), replicate(11, NA)))
# Saving all the factor levels to a data frame.
dataFactorLevels <- data.frame(levels(data$Industry),
c(levels(data$Ethnicity), replicate(9, NA)),
c(levels(data$Citizen), replicate(11, NA)))
# Converting the factors into actual integers
data <- data %>%
mutate(Industry = as.integer(Industry),
Ethnicity = as.integer(Ethnicity),
Citizen = as.integer(Citizen))
?createDataPartition
train_indices <- createDataPartition(data, p = 0.7)
train_indices <- createDataPartition(data, times = 1, p = 0.7, list = FALSE)
train_indices <- createDataPartition(data$Gender, times = 1, p = 0.7, list = FALSE)
train_set <- data[train_indices, ]
test_set <- data[-train_indices, ]
process <- preProcess(train_set, method = c('range'))
train_set <- predict(process, train_set)
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Approved) %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(value)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~variable, scales = 'free')
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Approved) %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(value)) +
geom_density() +
facet_wrap(~variable, scales = 'free')
data %>%
select(Gender, Age, Debt, Married, BankCustomer, YearsEmployed, PriorDefault,
Employed, CreditScore, DriversLicense, Approved) %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(value)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~variable, scales = 'free')
library(readr)
library(kaggler)
library(tidyverse)
library(caret)
library(rpart)
library(Hmisc)
library(reshape2)
process <- preProcess(train_set, method = c('range'))
train_set <- predict(process, train_set)
test_set <- predict(process, test_set)
# Splitting the data into training and test sets
train_indices <- createDataPartition(data$Gender, times = 1, p = 0.7, list = FALSE)
train_set <- data[train_indices, ]
test_set <- data[-train_indices, ]
# MinMaxScaling all variables
process <- preProcess(train_set, method = c('range'))
train_set <- predict(process, train_set)
process <- preProcess(test_set, method = c('range'))
test_set <- predict(process, test_set)
glm_fit <- train_set %>%
glm(Approved ~ ., data = _, family = "binomial")
glm_fit <- train_set %>%
glm(Approved ~ ., family = "binomial")
glm_fit <- train(Approved ~ ., method = 'glm', data = train_set)
warnings()
train_set$Approved <- factor(train_set$Approved)
test_set$Approved <- factor(test_set$Approved)
glm_fit <- train(Approved ~ ., method = 'glm', data = train_set)
warnings()
confusionMatrix(predict(glm_fit, test_set),
test_set$Approved)$overall["Accuracy"]
confusionMatrix(predict(glm_fit, test_set),
test_set$Approved)
knn_fit <- train(Approved ~ ., method = 'knn',
data = train_set, tuneGrid = data.frame(k = seq(9, 71, 2)))
confusionMatrix(predict(knn_fit, test_set, type = 'raw'),
test_set$Approved)$overall["Accuracy"]
knn_accuracy <- confusionMatrix(predict(knn_fit, test_set, type = 'raw'),
test_set$Approved)$overall["Accuracy"]
?prcomp
prcomp_data <- prcomp(data[, 1:16])
pca_data <- data.frame(
PC1 = prcomp_data$x[, 1],
PC2 = prcomp_data$x[, 2]
)
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point()
# MinMaxScaling all variables
process <- preProcess(data, method = c('range'))
data <- predict(process, data)
# Using dimensional reduction to plot the data points
prcomp_data <- prcomp(data[, 1:16])
pca_data <- data.frame(
PC1 = prcomp_data$x[, 1],
PC2 = prcomp_data$x[, 2]
)
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point()
k <- kmeans(data, centers = 8)
data$Cluster <- k$cluster
pca_data$cluster <- k$cluster
ggplot(pca_data, aes(x = PC1, y = PC2, col = cluster)) +
geom_point()
k <- kmeans(data, centers = 8)
data$Cluster <- k$cluster
pca_data$cluster <- k$cluster
ggplot(pca_data, aes(x = PC1, y = PC2, col = cluster)) +
geom_point()
train_indices <- createDataPartition(data$Gender, times = 1, p = 0.7, list = FALSE)
train_set <- data[train_indices, ]
test_set <- data[-train_indices, ]
# Creating a logistic regression model (because the predicted value is either 0 or 1)
train_set$Approved <- factor(train_set$Approved)
test_set$Approved <- factor(test_set$Approved)
glm_fit <- train(Approved ~ ., method = 'glm', data = train_set)
glm_accuracy <- confusionMatrix(predict(glm_fit, test_set),
test_set$Approved)$overall["Accuracy"]
knn_fit <- train(Approved ~ ., method = 'knn',
data = train_set, tuneGrid = data.frame(k = seq(9, 71, 2)))
knn_accuracy <- confusionMatrix(predict(knn_fit, test_set, type = 'raw'),
test_set$Approved)$overall["Accuracy"]
ggplot(pca_data, aes(x = PC1, y = PC2, fill = cluster)) +
geom_point()
ggplot(pca_data, aes(x = PC1, y = PC2, color = cluster)) +
geom_point()
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(aes(color = cluster))
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(aes(color = cluster)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9", "#FF00FF", "#FFFF00"
, "#00FFFF", "#00FF00", "#FF0000"))
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(aes(color = cluster)) +
scale_color_gradientn(colours = rainbow(5))
